@include ./base/omegajail.policy
@frequency ./gcc.frequency

# Exit
{exit, exit_group}: allow

# I/O
access: allow
socket: return ENETDOWN
chmod: allow
close: allow
{dup, dup2}: allow
{fcntl[arch=x86_64], fcntl64[arch=armv7]}: arg1 == F_GETFL || arg1 == F_SETFD || arg1 == F_GETFD
{fstat[arch=x86_64], fstat64[arch=armv7]}: allow
ioctl: arg1 == TCGETS || arg1 == FIONBIO || arg1 == TIOCGWINSZ
{lseek, _llseek[arch=armv7]}: allow
{lstat[arch=x86_64], lstat64[arch=armv7]}: allow
openat: allow
pipe2: allow
pread64: allow
read: allow
readlink: allow
{stat[arch=x86_64], stat64[arch=armv7]}: allow
umask: allow
unlink: allow
{write, writev}: allow

# Environment
getcwd: allow

# Memory
{arch_prctl[arch=x86_64], ARM_set_tls[arch=armv7]}: allow
brk: allow
madvise: allow
{mmap[arch=x86_64], mmap2[arch=armv7]}: allow
mprotect: allow
mremap: allow
munmap: allow

# Signals
restart_syscall[arch=armv7]: allow

# System
prlimit64: {arg1 == RLIMIT_STACK || arg2 == 0; allow, return EPERM}
getrusage: allow
sysinfo: allow
uname[arch=armv7]: allow

# Processes / threads
clone: arg0 == CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID
vfork: allow
wait4: allow

# abort()
getpid: allow
gettid: allow
rt_sigaction: arg0 != SIGSYS
rt_sigprocmask: allow
rt_sigreturn: allow
tgkill: arg0 != 1
