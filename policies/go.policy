@include ./base/omegajail.policy

# Exit
{exit, exit_group}: allow

# I/O
access: allow
close: allow
{dup, dup2, dup3}: allow
{fcntl[arch=x86_64], fcntl64[arch=armv7]}: arg1 == F_GETFD || arg1 == F_GETFL || arg1 == F_SETFD || arg1 == F_SETFL || arg1 == F_DUPFD_CLOEXEC
{fstat[arch=x86_64], fstat64[arch=armv7]}: allow
ioctl: return ENOTTY
{lseek, _llseek[arch=armv7]}: allow
openat: allow
read: allow
pread64: allow
socket: return ENETDOWN
{stat[arch=x86_64], stat64[arch=armv7]}: allow
{write, writev}: allow

# Memory
{arch_prctl[arch=x86_64], ARM_set_tls[arch=armv7]}: allow
brk: allow
madvise: allow
{mmap[arch=x86_64], mmap2[arch=armv7]}: allow

# Threads
clone: arg0 == CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS
futex: allow
nanosleep: allow
sched_getaffinity: allow
sched_yield: allow
set_robust_list: allow
set_tid_address: allow
sigaltstack: allow

# abort()
getpid: allow
gettid: allow
rt_sigaction: allow
rt_sigprocmask: allow
rt_sigreturn: allow
tgkill: arg0 != 1
