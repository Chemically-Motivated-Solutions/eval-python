@include ./base/omegajail.policy
@frequency ./js.frequency

# Exit
{exit, exit_group}: allow

# I/O
access: allow
close: allow
{fstat[arch=x86_64], fstat64[arch=armv7]}: allow
{fcntl[arch=x86_64], fcntl64[arch=armv7]}: arg1 == F_GETFL || arg1 == F_SETFD || arg1 == F_GETFD
getcwd: allow
ioctl: {arg1 == FIOCLEX || arg1 == TCGETS; allow, return EPERM}
{lstat[arch=x86_64], lstat64[arch=armv7]}: allow
openat: allow
pipe2: allow
{pwrite64, write}: allow
{pread64, read}: allow
readlink: allow
{stat[arch=x86_64], stat64[arch=armv7]}: allow
{statx[arch=x86_64], statx64[arch=armv7]}: allow
socket: return ENETDOWN

# Memory
{arch_prctl[arch=x86_64], ARM_set_tls[arch=armv7]}: allow
brk: allow
madvise: allow
mlock: allow
{mmap[arch=x86_64], mmap2[arch=armv7]}: allow
mprotect: allow
mremap: allow
munmap: allow

# Threads
clone: arg0 == CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID
futex: allow
prctl: arg0 == PR_SET_NAME
rt_sigaction: allow
rt_sigprocmask: allow
rt_sigreturn: allow
set_robust_list: allow
set_tid_address: allow
sched_yield: allow

# Environment
clock_getres: allow
{getegid[arch=x86_64], getegid32[arch=armv7]}: allow
{geteuid[arch=x86_64], geteuid32[arch=armv7]}: allow
{getgid[arch=x86_64], getgid32[arch=armv7]}: allow
{getuid[arch=x86_64], getuid32[arch=armv7]}: allow
getrandom: allow
getpid: allow
gettid: allow
prlimit64: {arg1 == RLIMIT_STACK || arg2 == 0; allow, return EPERM}

# Events
epoll_create1: allow
epoll_ctl: allow
epoll_pwait: allow
epoll_wait: allow
eventfd2: allow

# abort()
tgkill: arg0 != 1
